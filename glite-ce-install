#!/bin/bash
##############################################################################
#
# GLITE prototype PBS/LSF CE installation script     M.Reale / CERN Sept
22,2004
#
#   version 1.0   September 22, 2004
#   ref.URL :
http://egee-jra1-wm.mi.infn.it/egee-jra1-wm/lsfnode_install.shtml
#
# usage : options
#
# -v  Name of the VO to be supported by this CE
#     default = "egtest"       ( --> not mandatory )
#
# -V  Full hostname of your reference VO VOMS server
#     default = "tbn01.nikhef.nl"    ( --> not mandatory)
#
# -c  Path to a file somewhere on the machine containing the host
certificate
#     of your reference VOMS server
#     ---> not mandatory : if not specified, an empty file is set in the
proper location
#      ( /etc/grid-security/vomsdir/ac1f8ed3.0 )
#     It's not mandatory for the script, but of course you'll need to
put the certificate
#     there by hand for things to work
#
# -s  A String containing the subject of the certificate of your
reference VOMS
#       server  ----> not mandatory :
#       default = "/O=dutchgrid/O=hosts/OU=nikhef.nl/CN=tbn01.nikhef.nl"
#      REMEBER to put a backslash ("\") in front of any possible slash
("/") belonging
#       to the certificate's subject
#
# -g  Full path to a local gridmap file to be used instead of the
default one, i.e.the one
#      at http://cern.ch/reale/glite/grid-mapfile
#
# -n  if this option is set, the scripts skips the download of the CRLs
files
#
# -i  Installation type (PBS/LSF)  : not mandatory
#     default : PBS
#
#===============================================================================

source echofunc.sh
source checkuser.sh
source checkgroup.sh
source rpmcheck.sh

#-------------------------------------------------------------------------------------------------
function firstBasicChecks() {

  echo "checking hostcert.pem exists under /etc/grid-security........"

  if [ -e /etc/grid-security/hostcert.pem ]; then
     echo "....found."
     echo_success
   else
     echo " cert NOT found.Trying to copy it from the AFS repository......"
     a=`hostname`
     location=`echo $a | awk 'BEGIN { FS = "." }  $0  ~ // {print $1}'`
     if [ -e
/afs/cern.ch/project/egee/jra1/testing/certificates/$location/host-$a.cert
]; then
        cp
/afs/cern.ch/project/egee/jra1/testing/certificates/$location/host-$a.cert \
        /etc/grid-security/hostcert.pem
        print_status
        echo "....found."
        echo_success
     else
        echo " cert NOT found.We are in trouble therefore. exiting"
        echo_failure
        exit
     fi
   fi

   echo "checking hostkey.pem exists under /etc/grid-security........"

   if [ -e /etc/grid-security/hostkey.pem ]; then
     echo "....found."
     echo_success
   else
     echo " key NOT found.Trying to copy it from the AFS repository......"
     a=`hostname`
     location=`echo $a | awk 'BEGIN { FS = "." }  $0  ~ // {print $1}'`
     if [ -e
/afs/cern.ch/project/egee/jra1/testing/certificates/$location/hostkey.pem ];
then
        cp
/afs/cern.ch/project/egee/jra1/testing/certificates/$location/hostkey.pem \
        /etc/grid-security/hostkey.pem print_status
        echo "....found."
        echo_success
     else
        echo " key found.We are in trouble therefore. exiting"
        echo_failure
        exit
     fi
   fi
  }
#------------------------------------------------------------------------------------------------

function gatekeeperSetUp() {

  echo "downloading globus tarball..........."

    if [ -d /opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32 ]; then
        cd  /opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32
    else
        mkdir -p /opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32
        cd /opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32
    fi

    if [ -e
/opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32/globus.tar.gz
]; then
       rm
/opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32/globus.tar.gz
    fi

    if [ -e
/opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32/globus.tar ]; then
       rm
/opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32/globus.tar
    fi

wget
http://egee-jra1-integration.web.cern.ch/egee-jra1-integration/repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32/globus.tar.gz

    gunzip globus.tar.gz
    tar -xvf globus.tar

    if [ -d /opt/egee-ce/sbin ]; then
        cd  /opt/egee-ce/sbin/
    else
        mkdir -p /opt/egee-ce/sbin
        cd /opt/egee-ce/sbin
    fi

    if [ "$fcrl" == "yes" ]; then

      if [ -e /opt/egee-ce/sbin/edg-fetch-crl ]; then
          echo "edg-fetch-crl exists already."
      else
          echo " downloading edg-fetch-crl....."
          wget http://www.mi.infn.it/~prelz/grid/egee/4proto/edg-fetch-crl
          print_status
      fi

      echo " fetching new CRLs.............."
      chmod 755  /opt/egee-ce/sbin/edg-fetch-crl
      /opt/egee-ce/sbin/edg-fetch-crl -o /etc/grid-security/certificates/ -q
      print_status
    fi
    echo " checking proto group and  creating 100 proto pooled
accounts......"


    checkgroup proto
    if [ $? -ne 0 ]; then
       groupadd proto
    fi

    i=1; while [ "$i" -lt 10 ]; do
         checkuser proto00$i
         if [ $? -ne 0 ]; then
           adduser -g proto proto00$i
         fi
         i=`expr $i + 1`
         done
    i=10; while [ "$i" -lt 100 ]; do
         checkuser proto0$i
         if  [ $? -ne 0 ]; then
           adduser -g proto proto0$i;
         fi
         i=`expr $i + 1`
         done
    checkuser proto100
    if  [ $? -ne 0 ]; then
      adduser -g proto proto100
    fi

    echo_success
    echo
    echo "Downloading some VDT RPMs if not already under /tmp..."

    cd /tmp

    if [ -e
/tmp/edg_gatekeeper_gcc3_2_2-gcc32dbg_pgm-2.2.13-1_sl3.i386.rpm ]; then
      echo "edg_gatekeeper_gcc3_2_2-gcc32dbg_pgm-2.2.13-1_sl3 already
downloaded on /tmp"
      print_status
    else
      wget
http://grid-deployment.web.cern.ch/grid-deployment/RpmBuild/i386-cel3/wp4/gridification/RPMS/edg_gatekeeper_gcc3_2_2-gcc32dbg_pgm-2.2.13-1_sl3.i386.rpm
    fi
    if [ -e /tmp/edg-lcas_gcc3_2_2-1.1.20-1_sl3.i386.rpm ]; then
      echo "/edg-lcas_gcc3_2_2-1.1.20-1_sl3.i386.rpm already downloaded
on /tmp"
      print_status
    else
      wget
http://grid-deployment.web.cern.ch/grid-deployment/RpmBuild/i386-cel3/wp4/gridification/RPMS/edg-lcas_gcc3_2_2-1.1.20-1_sl3.i386.rpm
      print_status
    fi

    if [ -e /tmp/edg-lcmaps_gcc3_2_2-0.0.20-1.i386.rpm ]; then
       echo "edg-lcmaps_gcc3_2_2-0.0.20-1.i386.rpm is already downloaded
on /tmp"
    else
       wget
http://grid-deployment.web.cern.ch/grid-deployment/RpmBuild/i386-cel3/wp4/gridification/RPMS/edg-lcmaps_gcc3_2_2-0.0.20-1.i386.rpm
       print_status
    fi

    if [ -e /tmp/edg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3.i386.rpm ];
then
       echo "edg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3.i386.rpm is
already downloaded on /tmp "
    else
       wget
http://grid-deployment.web.cern.ch/grid-deployment/RpmBuild/i386-cel3/wp4/gridification/RPMS/edg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3.i386.rpm
       print_status
    fi

    if [ -e /tmp/edg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3.i386.rpm ];
then
       echo "gredg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3.i386.rpm is
already downloaded on /tmp "
    else
       wget
http://grid-deployment.web.cern.ch/grid-deployment/RpmBuild/i386-cel3/wp4/gridification/RPMS/edg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3.i386.rpm
       print_status
    fi

    if [ -e /tmp/edg-lcmaps_gcc3_2_2-basic_plugins-0.0.20-1.i386.rpm ]; then
       echo " edg-lcmaps_gcc3_2_2-basic_plugins-0.0.20-1.i386.rpm is
already downloaded on  /tmp  "
    else
       wget
http://grid-deployment.web.cern.ch/grid-deployment/RpmBuild/i386-cel3/wp4/gridification/RPMS/edg-lcmaps_gcc3_2_2-basic_plugins-0.0.20-1.i386.rpm
       print_status
    fi

    if [ -e /tmp/edg-lcmaps_gcc3_2_2-voms_plugins-0.0.20-1.i386.rpm ]; then
       echo "edg-lcmaps_gcc3_2_2-voms_plugins-0.0.20-1.i386.rpm is
already downloaded on /tmp "
    else
       wget
http://grid-deployment.web.cern.ch/grid-deployment/RpmBuild/i386-cel3/wp4/gridification/RPMS/edg-lcmaps_gcc3_2_2-voms_plugins-0.0.20-1.i386.rpm

       print_status
    fi

    if [ -e /tmp/gacl-0.9.2-1_gcc3_2_2_sl3.i386.rpm ]; then
       echo "gacl-0.9.2-1_gcc3_2_2_sl3.i386.rpm is already downloaded on
/tmp "
    else
       wget
http://grid-deployment.web.cern.ch/grid-deployment/RpmBuild/i386-cel3/other/RPMS/gacl-0.9.2-1_gcc3_2_2_sl3.i386.rpm
       print_status
    fi

    if [ -e /tmp/glite-security-voms-1.2.18-21.i386.rpm ]; then
       echo "glite-security-voms-1.2.18-21.i386.rpm is already
downloaded on /tmp"
    else
       wget
http://glite.web.cern.ch/glite/packages/N20040917/bin/rhel30/i386/RPMS/glite-security-voms-1.2.18-21.i386.rpm
    print_status
    fi
    echo
    echo "Installing some VDT RPMs (if not already installed)......"
    echo
rpmcheck edg_gatekeeper_gcc3_2_2-gcc32dbg_pgm-2.2.13-1_sl3

if [ $? -ne 0 ]; then
   rpm -Uvh --nodeps
edg_gatekeeper_gcc3_2_2-gcc32dbg_pgm-2.2.13-1_sl3.i386.rpm
   print_status
else
   echo "edg_gatekeeper_gcc3_2_2-gcc32dbg_pgm-2.2.13-1_sl3 already
installed"
fi

rpmcheck edg-lcas_gcc3_2_2-1.1.20-1_sl3
if [ $? -ne 0 ]; then
   rpm -Uvh --nodeps edg-lcas_gcc3_2_2-1.1.20-1_sl3.i386.rpm
else
    echo "edg-lcas_gcc3_2_2-1.1.20-1_sl3 is already installed "
fi

rpmcheck edg-lcmaps_gcc3_2_2-0.0.20-1
if [ $? -ne 0 ]; then
   rpm -Uvh --nodeps edg-lcmaps_gcc3_2_2-0.0.20-1.i386.rpm
else
    echo "edg-lcmaps_gcc3_2_2-0.0.20-1 is already installed "
fi

rpmcheck edg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3
if [ $? -ne 0 ]; then
   rpm -Uvh --nodeps edg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3.i386.rpm
else
    echo "edg-lcas_gcc3_2_2-voms_plugins-1.1.20-1_sl3 is already installed "
fi

rpmcheck edg-lcmaps_gcc3_2_2-basic_plugins-0.0.20-1
if [ $? -ne 0 ]; then
   rpm -Uvh --nodeps edg-lcmaps_gcc3_2_2-basic_plugins-0.0.20-1.i386.rpm
else
    echo "edg-lcmaps_gcc3_2_2-basic_plugins-0.0.20-1.i386.rpm is already
installed"
fi

rpmcheck edg-lcmaps_gcc3_2_2-voms_plugins-0.0.20-1

if [ $? -ne 0 ]; then
   rpm -Uvh --nodeps edg-lcmaps_gcc3_2_2-voms_plugins-0.0.20-1.i386.rpm
else
    echo "edg-lcmaps_gcc3_2_2-voms_plugins-0.0.20-1.i386.rpm is already
installed"
fi

rpmcheck gacl-0.9.2-1_gcc3_2_2_sl3
if [ $? -ne 0 ]; then
   rpm -Uvh --nodeps gacl-0.9.2-1_gcc3_2_2_sl3.i386.rpm
else
    echo "gacl-0.9.2-1_gcc3_2_2_sl3.i386.rpm is already installed"
fi

rpmcheck glite-security-voms-1.2.18-21
if [ $? -ne 0 ]; then
   rpm -Uvh --nodeps glite-security-voms-1.2.18-21.i386.rpm
else
   echo "glite-security-voms-1.2.18-21.i386.rpm is already installed"
fi

#-------------------------------------------------------------------------------------------------

if [ -e /opt/egee-ce/etc/ ]; then
        echo "/opt/egee-ce/etc  already exists"
else
        mkdir /opt/egee-ce/etc/
fi


echo "creating the  /opt/egee-ce/etc/gatekeeper.conf file..."

touch  /opt/egee-ce/etc/gatekeeper.conf

cat >  /opt/egee-ce/etc/gatekeeper.conf <<EOF
-x509_cert_dir /etc/grid-security/certificates
-x509_user_cert /etc/grid-security/hostcert.pem
-x509_user_key /etc/grid-security/hostkey.pem
-gridmap /etc/grid-security/grid-mapfile
-home /opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32
-e libexec
-port 2119
-grid_services /opt/egee-ce/etc/grid-services
-logfile "/var/log/gatekeeper.log"

-lcas_db_file lcas.db -lcas_etc_dir /opt/edg/etc/lcas/ -lcasmod_dir
/opt/edg/lib/lcas/ -lcmaps_db_file lcmaps.db -lcmaps_etc_dir
/opt/edg/etc/lcmaps -lcmapsmod_dir /opt/edg/lib/lcmaps
EOF
print_status

mkdir -p /opt/egee-ce/etc/grid-services

touch /opt/egee-ce/etc/grid-services/jobmanager-fork

echo "creating the  /opt/egee-ce/etc/grid-services/jobmanager-fork
file......."
cat > /opt/egee-ce/etc/grid-services/jobmanager-fork << EOF
stderr_log,local_cred -
/opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32/libexec/globus-job-manager
globus-job-manager -conf /opt/egee-ce/etc/globus-job-manager.conf -type
fork -rdn jobmanager-fork -machine-type unknown -publish-jobs
EOF
print_status

cd /opt/egee-ce/etc/grid-services

if [ -e /opt/egee-ce/etc/grid-services/jobmanager ]; then
    echo
    echo "symlink for jobmanager already exists."
else
    echo
    echo "creating the symlink for the jobmanager ...."
    ln -s /opt/egee-ce/etc/grid-services/jobmanager-fork jobmanager
    print_status
fi

echo "creating the /opt/egee-ce/etc/globus-job-manager.conf file......."

touch /opt/egee-ce/etc/globus-job-manager.conf.template

cat > /opt/egee-ce/etc/globus-job-manager.conf.template  << EOF

-home "/opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32"
-globus-gatekeeper-host #HN#
-globus-gatekeeper-port 2119
-globus-gatekeeper-subject ""
-globus-host-cputype i686
-globus-host-manufacturer pc
-globus-host-osname Linux
-globus-host-osversion "2.4.21-15.0.3.EL.cernsmp #1 SMP Mon Jul 5
12:10:48 CEST 2004"
-save-logfile on_error
-state-file-dir /opt/egee-ce/tmp/gram_job_state
-machine-type unknown
-globus-tcp-port-range "20000 25000"
EOF
print_status
hn=`hostname`

cat /opt/egee-ce/etc/globus-job-manager.conf.template | sed
"s/#HN#/$hn/g" > /opt/egee-ce/etc/globus-job-manager.conf

mkdir -p /opt/egee-ce/tmp
chmod 01777 /opt/egee-ce/tmp
mkdir -p /opt/egee-ce/tmp/gram_job_state
chmod 01777 /opt/egee-ce/tmp/gram_job_state

touch /opt/edg/etc/lcas/lcas.db
cat > /opt/edg/etc/lcas/lcas.db <<EOF
pluginname=lcas_userban.mod,pluginargs=ban_users.db
pluginname=lcas_voms.mod,pluginargs="-vomsdir
/etc/grid-security/vomsdir/ -certdir /etc/grid-security/certificates/
-authfile /opt/edg/etc/lcmaps/gridmapfile -authformat simple -use_user_dn"
EOF

touch /opt/edg/etc/lcas/ban_users.db

echo "creating /opt/edg/etc/lcmaps/gridmapfile......."
touch /opt/edg/etc/lcmaps/gridmapfile.template
cat > /opt/edg/etc/lcmaps/gridmapfile.template<<EOF
"/VO=#VONAME#" .proto
"/VO=#VONAME#/GROUP=/#VONAME#" .proto
EOF
cat /opt/edg/etc/lcmaps/gridmapfile.template |  sed
"s/#VONAME#/$voname/g" > /opt/edg/etc/lcmaps/gridmapfile
print_status

echo "creating /opt/edg/etc/lcmaps/groupmapfile file....."
touch /opt/edg/etc/lcmaps/groupmapfile.template
cat > /opt/edg/etc/lcmaps/groupmapfile.template <<EOF
"/VO=#VONAME#" proto
"/VO=#VONAME#/GROUP=/#VONAME#" proto
EOF
cat /opt/edg/etc/lcmaps/groupmapfile.template |  sed
"s/#VONAME#/$voname/g" > /opt/edg/etc/lcmaps/groupmapfile
print_status

echo "creating /opt/edg/etc/lcmaps/lcmaps.db file......"
touch /opt/edg/etc/lcmaps/lcmaps.db
cat >  /opt/edg/etc/lcmaps/lcmaps.db<<EOF
path = /opt/edg/lib/lcmaps/modules

posix_enf = "lcmaps_posix_enf.mod"
" -maxuid 1"
" -maxpgid 1"
" -maxsgid 32"

localaccount = "lcmaps_localaccount.mod"
" -gridmapfile /opt/edg/etc/lcmaps/gridmapfile"

poolaccount = "lcmaps_poolaccount.mod"
" -override_inconsistency"
" -gridmapfile /opt/edg/etc/lcmaps/gridmapfile"
" -gridmapdir /etc/grid-security/gridmapdir/"

vomsextract = "lcmaps_voms.mod"
" -vomsdir /etc/grid-security/vomsdir"
" -certdir /etc/grid-security/certificates"

vomslocalgroup = "lcmaps_voms_localgroup.mod"
" -groupmapfile /opt/edg/etc/lcmaps/groupmapfile"
" -mapmin 1"

vomspoolaccount = "lcmaps_voms_poolaccount.mod"
" -gridmapfile /opt/edg/etc/lcmaps/gridmapfile"
" -gridmapdir /etc/grid-security/gridmapdir"
" -override_inconsistency"
# policies
standard:
localaccount -> posix_enf | poolaccount
poolaccount -> posix_enf

voms:
vomsextract -> vomslocalgroup
vomslocalgroup -> vomspoolaccount
vomspoolaccount -> posix_enf
EOF
print_status

if [ -d /etc/grid-security/vomsdir ]; then
    echo "/etc/grid-security/vomsdir already exists"
else
    mkdir -p /etc/grid-security/vomsdir
fi

if [ "$certificate" == "" ]; then
     touch /etc/grid-security/vomsdir/ac1f8ed3.0
     echo
"======================================================================="
     echo "REMEMBER TO PUT THE CERTIFICATE OF YOUR VOMS SERVER INSIDE
THE FILE"
     echo " /etc/grid-security/vomsdir/ac1f8ed3.0 "
     echo
"======================================================================="
else
     cp $certificate  /etc/grid-security/vomsdir/ac1f8ed3.0
fi

touch /opt/edg/etc/vomses

cat >  /opt/edg/etc/vomses.template << EOF
"#VONAME#" "#VOMS#" "15001" "#VOMSSUBJECT#" "#VONAME#"
EOF

echo "creating /opt/edg/etc/vomses.template......"

cat /opt/edg/etc/vomses.template |  sed "s/#VONAME#/$voname/g" | sed
"s/#VOMS#/$vomshostname/g"  | sed "s/#VOMSSUBJECT#/$subject/g" >
/opt/edg/etc/vomses
print_status

if [ "$gridmap" == "" ]; then

cd /tmp
   if [ -e /tmp/grid-mapfile ]; then
      /bin/rm /tmp/grid-mapfile
   fi
   wget http://cern.ch/reale/glite/grid-mapfile
   cat grid-mapfile  >> /opt/edg/etc/lcmaps/gridmapfile
else
   cat $gridmap >> /opt/edg/etc/lcmaps/gridmapfile
fi


export
LD_LIBRARY_PATH=/opt/egee-repository/globus/2.4.3-VDT-1.2.0/rhel30_gcc32/lib:/opt/glite/lib:/opt/edg/lib

echo "starting the edg-gatekeeper............."

  pro=`ps -efwww | grep gatek | head -1 | awk 'BEGIN { FS = " " } $0  ~
// {print $2}'`
  if [ $pro ]; then
     kill -9 $pro
  fi


/opt/edg/sbin/edg-gatekeeper -conf /opt/egee-ce/etc/gatekeeper.conf
print_status


}

#-----------------------------------------------------------------------------------------


#---------------------------------------------------------------------------------------------



#--------------------------------------------------------------------------------------------


#--------------------------------------------------------------------------------------------
function usage()
{
     cat <<EOF

usage: `basename $0` [-v VOname][-V VOMSserver][-c VOMScertifFile] [-s
VOMSsubject][-i installType][-g gridmapfile][-f][-h]

Installs a GLITE prototypal CE host according to the recipe advertised at
http://egee-jra1-wm.mi.infn.it/egee-jra1-wm/lsfnode_install.shtml

-v  VO name               Name of the reference VO for the VOMS client
part set up on the CE
-V  VOMS server hostname  Full hostname of the corresponding VOMS server
-c  VOMS certif.file      Full path to a file containing the host public
cert of the VOMS server
-s  VOMS certif.subject   Subject of the host certificate of the VOMS server
                           REMEBER to put a backslash ("\") in front of
any possible
                           slash ("/") belonging to the certificate's
subject
-i  install type          pbs (for a PBS CE)  or lsf (for an  LSF CE)
-g  gridmap file          full path to a local file to be used as non
default gridmapfile
                           the default one is the one at
http://cern.ch/reale/glite/grid-mapfile
-n                        if -n is used, the scrips skips the download
of the CRL files
-h                        print this message

EOF

}
#------------------------------------------------------------------------------------------------
# MAIN PROGRAM BEGINS HERE :

if [ "`id -u`" -ne 0 ]; then
         echo "Error: you must be root to execute this script"
         exit 1
fi

#Parse command line options

  voname="egtest"
  vomshostname="tbn01.nikhef.nl"
  certificate=""
  subject="\/O=dutchgrid\/O=hosts\/OU=nikhef.nl\/CN=tbn01.nikhef.nl"
  installtype="pbs"
  gridmap=""
  fcrl="yes"

while getopts v:V:c:s:i:g:nh opt
do
     case "$opt" in
           v) voname=$OPTARG
                             ;;
           V) vomshostname=$OPTARG
                 ;;
           c) certificate=$OPTARG
                                  ;;
                   s) subject=$OPTARG
                                   ;;
                   i) installtype=$OPTARG
                                  ;;
                   g) gridmap=$OPTARG
                                  ;;
                   n) fcrl="no"
                                  ;;
           h) usage
                              exit 0
                 ;;
     esac
done

echo "======================================================"
echo "PAY ATTENTION:"

    echo "REMEBER to put a backslash ("\\") in front of any possible
slash ("/") belonging to"
    echo "the certificate's subject if you're using the -s option"

  echo "========================================================="
  echo " Selected options: (empty values means defaults chosen) "
  echo " VO name            = " $voname
  echo " VOMS host          = " $vomshostname
  echo " certificate file   = " $certificate
  echo " subject            = " $subject
  echo " install type       = " $installtype
  echo " gridmap file       = " $gridmap
  echo " fetching CRL       = " $fcrl
  echo "=========================================================="

   echo

   firstBasicChecks
   gatekeeperSetUp
